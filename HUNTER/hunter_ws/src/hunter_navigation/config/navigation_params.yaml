
amcl:
  ros__parameters:
    use_sim_time: False
    odom_frame_id: "odom"
    base_frame_id: "base_footprint"
    scan_topic: "/ouster/scan"
    min_particles: 1000
    max_particles: 8000
    map_topic: "/map_amcl"
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    robot_model_type: "nav2_amcl::DifferentialMotionModel"  # o "DifferentialMotionModel" si es un base diff
    laser_model_type: "likelihood_field_prob"
    do_beamskip: True
    beam_skip_distance: 0.5
    laser_max_range: 100.0
    laser_min_range: -1.0
    update_min_d: 0.2
    update_min_a: 0.2
    resample_interval: 1
    transform_tolerance: 0.3
    recovery_alpha_slow: 0.001
    recovery_alpha_fast: 0.1

planner_server:
  ros__parameters:
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      allow_unknown: false
      tolerance: 0.4
      max_iterations: 1000000
      motion_model_for_search: "REEDS_SHEPP" # SI ESTO FALLA SE LE PONE "DUBIN" PARA QUE SOLO VAYA PARA ALANTE
      minimum_turning_radius: 1.6
      reverse_penalty: 2.5 # PENALIZA EL RETROCESO, SI EMPIEZA A IR MUCHO PARA ATRAS, SE LE SUBE MAS
      change_penalty: 1.0
      non_straight_penalty: 1.2
      allow_primitive_interpolation: true
      use_quadratic_cost_penalty: true
      smooth_path: true
      debug_visualizations: false

      smoother:
        smoother_plugin: "nav2_smac_planner/ConjugateGradientSmoother"
        tolerance: 1e-10
        max_iterations: 100
        w_smooth: 0.3
        w_curvature: 0.1
        w_distance: 0.2


bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame:  base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node
bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: False
bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: False
controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.01
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.01
    progress_checker_plugins: ["progress_checker"]  # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    # Progress checker
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.2
      movement_time_allowance: 8.0

    # Goal checker
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.6
      stateful: True

    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      motion_model: "Ackermann"
      model_dt: 0.07
      time_horizon: 2.5
      vx_std: 0.1
      vy_std: 0.0
      wz_std: 0.2
      vx_max: 0.2
      vy_max: 0.0
      vx_min: -0.15
      wz_max: 1.5
      ax_max: 2.5
      ax_min: -2.0
      ay_max: 0.0
      ay_min: 0.0
      az_max: 3.0
      temperature: 0.15
      retry_attempt_limit: 5
      transform_tolerance: 0.3
      prune_distance: 1.5
      enforce_path_inversion: true
      inversion_xy_tolerance: 0.3
      inversion_yaw_tolerance: 0.785  # 45°
      AckermannConstraints:
        min_turning_r: 1.6
      critics: ["PathFollowCritic", "PathAlignCritic", "GoalCritic", "GoalAngleCritic", "PreferForwardCritic", "CostCritic", "ObstaclesCritic"]

      PathFollowCritic:
        enabled: true
        cost_weight: 12.0       # 🔥 Sigue el camino con precisión
        offset_from_furthest: 6
        threshold_to_consider: 1.5

      PathAlignCritic:
        enabled: true
        cost_weight: 4.0       # 🔥 Alinearse a la dirección del path
        trajectory_point_step: 2
        use_path_orientations: true

      GoalCritic:
        enabled: true
        cost_weight: 5.0

      GoalAngleCritic:
        enabled: true
        cost_weight: 3.0

      PreferForwardCritic:
        enabled: true
        cost_weight: 5.0       # 🔒 evita retrocesos
      
      CostCritic:
        enabled: true
        cost_weight: 5.0       # 🔒 penaliza el coste del path

      ObstaclesCritic:
        enabled: true
        repulsion_weight: 5.0       # 🔒 penaliza la cercanía a obstáculos
        inflation_radius: 0.2   # 🔒 radio de la capa de inflación
        consider_footprint: true



# =====================
# LOCAL COSTMAP
# =====================
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: False          # Robot real
      global_frame: "odom"         # Típico para local costmap
      robot_base_frame: "base_footprint"
      resolution: 0.05
      transform_tolerance: 0.3

      rolling_window: true
      width: 5
      height: 5

      # Frecuencias del local costmap
      update_frequency: 20.0
      publish_frequency: 10.0

      footprint: "[[0.5, 0.4], [0.5, -0.4], [-0.5, -0.4], [-0.5, 0.4]]"
      footprint_padding: 0.1

      plugins:
        - "obstacle_layer"
        - "inflation_layer"
        # - "social_layer"
      # Obstacle layer local
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        footprint_clearing_enabled: true
        max_obstacle_height: 1.0
        combination_method: 1
        observation_sources: "laser"
        observation_persistence: 0.2
        obstacle_range: 5.0
        raytrace_range: 5.5

        laser:
          topic: "/ouster/scan"
          max_obstacle_height: 1.0
          clearing: True
          marking: True

      # Inflation layer local
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.2       # Mucho mayor que el radio inscrito (~0.275 m)
        cost_scaling_factor: 0.5   # Coste decrece de forma gradual
        inflate_unknown: true
        inflate_around_unknown: true

# =====================
# GLOBAL COSTMAP
# =====================
global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: False        # Robot real
      global_frame: "map"        # Typically 'map'
      track_unknown_space: false
      robot_base_frame: "base_footprint"
      resolution: 0.025
      downsample_costmap: false
      footprint_padding: 0.0
      transform_tolerance: 0.3
      # Frecuencias típicas
      update_frequency: 1.0
      publish_frequency: 1.0
      # Radio del robot (o footprint)
      footprint: "[[0.5, 0.27], [0.5, -0.27], [-0.5, -0.27], [-0.5, 0.27]]"
      # Lista de capas
      plugins:
        - "static_layer"
        - "obstacle_layer"
        - "inflation_layer"
      # Static layer
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: true
        map_subscribe_transient_local: true
        subscribe_to_updates: false
        transform_tolerance: 0.3
      # Obstacle layer
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        footprint_clearing_enabled: true
        max_obstacle_height: 2.0
        combination_method: 1
        observation_sources: "laser"
        laser:
          topic: "/ouster/scan"
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          observation_persistence: 0.5
          obstacle_max_range: 5.0
          raytrace_max_range: 100.0
      # Inflation layer
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 1.2      # Mucho mayor que el radio inscrito (~0.275 m)
        cost_scaling_factor: 7.1  # Coste decrece de forma gradual
        inflate_unknown: true
        inflate_around_unknown: true
      # Costmap completo
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: False
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: "mapa2025.yaml"

map_server_amcl:
  ros__parameters:
    use_sim_time: False
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: "mapa2025_amcl.yaml"

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True